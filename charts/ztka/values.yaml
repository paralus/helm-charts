# Default values for Paralus ZTKA.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas in deployment
replicaCount: 1

# List of images to be deployed along with its tag. Specifying image
# tag overrides deault value which is chart appVersion.
images:
  paralus:
    name: paralus
    # -- Paralus paralus image
    repository: paralusio/paralus
    tag: "v0.1.4"
  paralusInit:
    name: paralus-init
    # -- Paralus paralus initialize image
    repository: paralusio/paralus-init
    tag: "v0.1.4"
  relay:
    name: relay
    # -- relay image
    repository: paralusio/relay
    tag: "v0.1.2"
  prompt:
    name: prompt
    # -- prompt image
    repository: paralusio/prompt
    tag: "v0.1.1"
  dashboard:
    name: dashboard
    # -- Paralus dashboard image
    repository: paralusio/dashboard
    tag: "v0.1.2"

  # -- If defined, a imagePullPolicy applied to all deployments
  pullPolicy: IfNotPresent

# -- If defined, uses a Secret to pull an image from a private Docker
# registry or repository
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is auto generated.
  name: ""

# -- Annotations for the all deployed pods
podAnnotations: {}

# Pod Security Context
podSecurityContext: {}
  # fsGroup: 2000

# Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# List of services and their port numbers. When "port" is not
# specificed in "services.<name>.ports" list then service exposes on
# containerPort instead.
services:
  # -- paralus service config
  paralus:
    type: ClusterIP
    ports:
      - name: http
        containerPort: 11000
      - name: rpc
        containerPort: 10000
      - name: relay-peering
        containerPort: 10001
  # -- prompt service config
  prompt:
    type: ClusterIP
    ports:
      - name: http
        containerPort: 7009
  # -- relay service config
  relay:
    type: ClusterIP
    ports:
      - name: https
        containerPort: 443
  # -- dashboard service config
  dashboard:
    type: ClusterIP
    ports:
      - name: nginx
        containerPort: 80

ingress:
  # - install ingress resources.
  enabled: false
  className: ""
  # - Annotation for ingress resources. The ssl-passthrough annotation
  # - is mandatory for ZTKA ingress.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress TLS for console
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Autoscale paralus deployment resource
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

fqdn:
  # -- Root domain
  domain: paralus.local
  # -- subdomain used for viewing dashboard
  hostname: "console"
  # -- a wildcard subdomain used for controller cluster to target
  # -- cluster communication
  coreConnectorSubdomain: "*.core-connector"
  # -- a wildcard subdomain used for controller cluster to end user
  # -- communication
  userSubdomain: "*.user"

paralus:
  # -- Enable paralus migrations
  automigrate: true
  initialize:
    # -- Partner name
    partner: "DefaultPartner"
    # -- Partner description
    partnerDesc: "Default Partner"
    # -- Partner host
    partnerHost: "paralus.local"
    # -- Organization name
    org: "DefaultOrg"
    # -- Organization description
    orgDesc: "Default Organization"
    # -- Admin email address
    adminEmail: "admin@paralus.local"
    # -- Admin first name
    adminFirstName: "Admin"
    # -- Admin last name
    adminLastName: "User"

analytics:
  enable: true
  gaTrackingID: "UA-230674306-1"

auditLogs:
  # -- postgres or elasticsearch for storing audit logs
  # -- postgres by default
  storage: postgres 

deploy:
  kratos:
    # -- Kratos instance is auto deployed and managed by Helm release
    # when true.
    enable: true
    # -- SMTP connection URI that used by auto-deployed kratos for
    # sending mails for example, account recovery etc.
    smtpConnectionURI: "smtps://test:test@mypost:1025/?skip_ssl_verify=true"
    # -- Kratos public address. Required when `deploy.kratos.enable`
    # is unset
    publicAddr: ""
    # -- Kratos admin address. Required when `deploy.kratos.enable` is
    # unset
    adminAddr: ""

  elasticsearch:
    # -- Elasticsearch instance is auto deployed and managed by Helm
    # release when true.
    enable: false
    # -- Elasticsearch address. Required when `deploy.elasticsearch.enable`
    # is unset.
    address: ""

  postgresql:
    # -- Postgresql db is auto deployed and managed by Helm release
    # when true. (It is recommended to manage your own DB instance
    # separately or use DB services like Amazon RDS in production)
    enable: true
    # -- Postgresql DSN for example, "postgres://user:password@host:5432/db". Required
    # when `deploy.postgresql.enable` is unset and individual components are not specified.
    # Overrides individual components (address, username, password, database)
    dsn: ""
    # -- Postgresql address for example, "localhost:5432". Required
    # when `deploy.postgresql.enable` is unset and dsn is not specified.
    address: ""
    # -- Postgresql username. Required when `deploy.postgresql.enable`
    # is unset and dsn is not specified.
    username: ""
    # -- Postgresql password. Required when `deploy.postgresql.enable`  
    # is unset and dsn is not specified.
    password: ""
    # -- Postgresql database name. Required when
    # `deploy.postgresql.enable` is unset and dsn is not specified.
    database: ""

  filebeat:
    # -- Filebeat is used to collect audit logs into the system. You
    # can disable this if you don't want audit logs.
    enable: true
    # -- You can use this to config the index prefixes for
    # elasticsearch.  This has to match with your filebeat config in
    # `filebeat.daemonset.filebeatConfig.filebeat.yml`
    indexPrefix: "ralog"
    # TODO: can we somehow template it in filebeat.yml?

  fluentbit:
    # -- Filebeat is used to collect audit logs into the system. You
    # can disable this if you don't want audit logs.
    enable: true
    # -- You can use this to config the index prefixes for
    # elasticsearch.  This has to match with your filebeat config in
    # `filebeat.daemonset.filebeatConfig.filebeat.yml`
    indexPrefix: "ralog"
    # TODO: can we somehow template it in filebeat.yml?

  contour:
    # -- auto install contour ingress controller
    enable: true

    # -- TLS properties of the virtual host
    tls: {}
    # secretName: chart-example-tls

# -- the chart will overwrite some values of kratos subchart.
# @default -- kratos subchart overwrite
kratos:
  secret:
    enabled: false
    nameOverride: "kratos"
  kratos:
    development: false
    config:
      serve:
        public:
          cors:
            enabled: true
            allowed_headers:
              - Authorization
              - Cookie
              - Content-Type
              - X-Session-Token
            exposed_headers:
              - Content-Type
              - Set-Cookie
        admin:
          port: 4434
      selfservice:
        methods:
          password:
            enabled: true
          oidc:
            enabled: true
        flows:
          settings:
            privileged_session_max_age: 15m
          recovery:
            enabled: true
          registration:
            lifespan: 10m
            after:
              password:
                hooks:
                  - hook: session
              oidc:
                hooks:
                  - hook: session
      identity:
        default_schema_url: file:///etc/config/identity.default.schema.json

    identitySchemas:
      "identity.default.schema.json": |
        {
          "$id": "https://schemas.ory.sh/presets/kratos/quickstart/email-password/identity.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Person",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "first_name": {
                  "title": "First name",
                  "type": "string",
                  "pattern": "^.*$"
                },
                "last_name": {
                  "title": "Last name",
                  "type": "string",
                  "pattern": "^.*$"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "minLength": 3,
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      }
                    },
                    "verification": {
                      "via": "email"
                    },
                    "recovery": {
                      "via": "email"
                    }
                  }
                },
                "idp_group": {
                  "title": "IDP group",
                  "type": "string"
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email"
              ],
              "additionalProperties": false
            }
          }
        }

  deployment:
    extraEnv:
      - name: SERVE_PUBLIC_BASE_URL
        valueFrom:
          configMapKeyRef:
            name: kratos-config
            key: serve_public_base_url
      - name: SELFSERVICE_DEFAULT_BROWSER_RETURN_URL
        valueFrom:
          configMapKeyRef:
            name: kratos-config
            key: default_browser_return_url
      - name: SELFSERVICE_WHITELISTED_RETURN_URLS
        valueFrom:
          configMapKeyRef:
            name: kratos-config
            key: default_browser_return_url
      - name: SELFSERVICE_FLOWS_SETTINGS_UI_URL
        valueFrom:
          configMapKeyRef:
            name: kratos-config
            key: selfservice_flows_settings_ui_url
      - name: SELFSERVICE_FLOWS_RECOVERY_UI_URL
        valueFrom:
          configMapKeyRef:
            name: kratos-config
            key: selfservice_flows_recovery_ui_url
      - name: SELFSERVICE_FLOWS_REGISTRATION_UI_URL
        valueFrom:
          configMapKeyRef:
            name: kratos-config
            key: selfservice_flows_registration_ui_url
      - name: SELFSERVICE_FLOWS_ERROR_UI_URL
        valueFrom:
          configMapKeyRef:
            name: kratos-config
            key: selfservice_flows_error_ui_url
    # OIDC Provider config synchronizer as sidecar to Kratos
    extraContainers: |
        - name: synchronizer
          image: "paralusio/kratos-synchronizer:v0.1.4"
          volumeMounts:
            - name: other-configs
              mountPath: /etc/kratos
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: paralus-db
                  key: DSN
            - name: KRATOS_PROVIDER_CFG
              value: "/etc/kratos/providers.yaml"
    extraArgs:
      - --config
      - /etc/kratos/providers.yaml
    extraVolumes:
      - name: other-configs
        emptyDir: {}
    extraVolumeMounts:
      - name: other-configs
        mountPath: /etc/kratos
    extraInitContainers: |
        - name: create-file
          image: "busybox:latest"
          command: ['sh', '-c', 'touch /etc/kratos/providers.yaml']
          volumeMounts:
            - name: other-configs
              mountPath: /etc/kratos
  watcher:
    enabled: true
    mountFile: /etc/kratos/providers.yaml

elasticsearch:
  replicas: 1
  minimumMasterNodes: 1

postgresql:
  dbAddr: ""
  # -- When `deploy.postgresql.enable` is true postgres instance is
  # created with this credentials.
  auth:
    existingSecret: postgresql
    enablePostgresUser: false
    username: "admindbuser"
    password: "admindbpassword"
    database: "admindb"

# -- the chart will overwrite some values of filebear subchart.
# @default -- filebeat subchart overwrite
filebeat:
  daemonset:
    filebeatConfig:
      filebeat.yml: |
        setup.ilm.enabled: false
        filebeat.module: {}
        filebeat.inputs: {}
        filebeat.autodiscover:
          providers:
            - type: kubernetes
              templates:
                - condition:
                    equals:
                      kubernetes.container.name: paralus-tail
                  config:
                    - type: container
                      json.add_error_key: true
                      json.expand_keys: true
                      fields:
                        paralus.component: system
                      processors:
                        - timestamp:
                            field: json.timestamp
                            layouts:
                              - "2006-01-02T15:04:05.999999999Z"
                            test:
                              - "2022-04-21T11:14:13.538105978Z"
                      paths:
                        - /var/log/containers/*-${data.kubernetes.container.id}.log
                - condition:
                    equals:
                      kubernetes.container.name: prompt-tail
                  config:
                    - type: container
                      json.add_error_key: true
                      json.expand_keys: true
                      fields:
                        paralus.component: prompt
                      processors:
                        - timestamp:
                            field: json.timestamp
                            layouts:
                              - "2006-01-02T15:04:05.999999999Z"
                            test:
                              - "2022-04-21T11:14:13.538105978Z"
                      paths:
                        - /var/log/containers/*-${data.kubernetes.container.id}.log
                - condition:
                    equals:
                      kubernetes.container.name: relay-tail
                  config:
                    - type: container
                      json.add_error_key: true
                      json.expand_keys: true
                      fields:
                        paralus.component: relay
                      processors:
                        - drop_event:
                            when:
                              has_fields: ['json.caller']  # these will be application logs
                        - timestamp:
                            field: json.ts
                            layouts:
                              - "2006-01-02T15:04:05.999999999Z"
                            test:
                              - "2022-04-21T11:14:13.538105978Z"
                      paths:
                        - /var/log/containers/*-${data.kubernetes.container.id}.log

        processors:
          - add_cloud_metadata: ~
          - add_kubernetes_metadata:
              in_cluster: false

        output.file:
          enabled: false

        output.elasticsearch:
          index: "ralog-%{[fields.paralus.component]}-%{+yyyy.MM.dd}"
          hosts: ['${ELASTICSEARCH_HOST:elasticsearch-master}:${ELASTICSEARCH_PORT:9200}']
          # username: ${ELASTICSEARCH_USERNAME} # uncomment this for username
          # password: ${ELASTICSEARCH_PASSWORD} # uncomment this for password

        setup:
          template:
            name: ralog-template
            overwrite: true
            pattern: ralog-*
            append_fields:
              - name: json.timestamp
                type: date
              - name: json.ts
                type: date

fluentbit :
  daemonset:
    fluentbitConfig:
      fluentbit.yml : |
        service: |
          [SERVICE]
              Daemon Off
              Flush {{ .Values.flush }}
              Log_Level {{ .Values.logLevel }}
              Parsers_File parsers.conf
              Parsers_File custom_parsers.conf
              HTTP_Server On
              HTTP_Listen 0.0.0.0
              HTTP_Port {{ .Values.metricsPort }}
              Health_Check On

        ## https://docs.fluentbit.io/manual/pipeline/inputs
        inputs: |
          [INPUT]
              Name tail
              Tag kube.*
              Path /var/log/containers/*paralus*paralus-tail*.log
              Refresh_Interval 5
              DB /var/log/fluentbit.db
              DB.Sync Normal
              Mem_Buf_Limit 5M
              Skip_Long_Lines On
              Read_from_Head True
              Parser json


        ## https://docs.fluentbit.io/manual/pipeline/filters
        filters: |
          [FILTER]
              Name kubernetes
              Match kube.*
              Kube_URL https://kubernetes.default.svc:443
              Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
              Merge_Log Off
              K8S-Logging.Parser On
              K8S-Logging.Exclude On
              Annotations off
              Labels off

          [FILTER]
              Name record_modifier
              Match *
              Remove_key kubernetes*
              Remove_key stdout
        ## https://docs.fluentbit.io/manual/pipeline/outputs
        outputs: |
          [OUTPUT]
              Name stdout
              Match kube.*
              Format json
              Json_Date_Key timestamp
              Json_Date_Format iso8601 

          [OUTPUT]
              Name pgsql
              Match *
              Host 10.96.250.27
              Port 5432
              User admindbuser
              Password admindbpassword
              Database admindb
              Table paralus
              Timestamp_Key timestamp

# -- the chart will overwrite some values of contour subchart.
# @default -- contour subchart overwrite
contour:
  contour:
    # HTTPProxy CR installation failed when CRDs are not present. To
    # install CRDs before chart installation we manage contour CRDs in
    # 'crds/' folder as a workaround, till we find better solution to
    # solve this.
    # https://github.com/paralus/helm-charts/issues/13
    manageCRDs: false
    # Do not create IngressClass resource. We setup HTTPProxy
    # resources instead.
    ingressClass:
      create: false

  envoy:
    service:
      # -- Annotations for Envoy service.
      annotations: {}